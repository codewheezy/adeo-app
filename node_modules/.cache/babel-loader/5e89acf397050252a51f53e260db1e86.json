{"ast":null,"code":"var _jsxFileName = \"/Users/uchennaibe/Desktop/adeo-app/src/screens/quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Header from '../components/header';\nimport Question from '../components/question';\nimport Description from '../components/description';\nimport LeftSide from '../components/leftside';\nimport Rightside from '../components/rightside';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [number, setNumber] = useState(1);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [postPerPage] = useState(10);\n  const [items, setItems] = useState([]);\n  const lastPost = number * postPerPage;\n  const firstPost = lastPost - postPerPage;\n  const currentPost = post.slice(firstPost, lastPost);\n  const pageNumber = [];\n\n  for (let i = 1; i <= Math.ceil(post.length / postPerPage); i++) {\n    pageNumber.push(i);\n  }\n\n  const ChangePage = pageNumber => {\n    setNumber(pageNumber);\n  };\n\n  useEffect(() => {\n    fetch(`https://adeo.app/api/questions/get?level_id=${number}&course_id=1&limit=${postPerPage}`).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems([...items, result.data]);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), items.map((item, id) => {\n        var _item$;\n\n        return /*#__PURE__*/_jsxDEV(Question, {\n          item: (_item$ = item[0]) === null || _item$ === void 0 ? void 0 : _item$.text\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(LeftSide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Rightside, {\n          rightClick: () => nextPage(),\n          leftClick: () => prevPage(),\n          items: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this) // console.log(items)\n    ;\n  }\n};\n\n_s(Quiz, \"9fbcL+oclRV2B3hN8z/U6U41gzY=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/adeo-app/src/screens/quiz.js"],"names":["React","Fragment","useEffect","useState","Header","Question","Description","LeftSide","Rightside","Quiz","error","setError","number","setNumber","isLoaded","setIsLoaded","postPerPage","items","setItems","lastPost","firstPost","currentPost","post","slice","pageNumber","i","Math","ceil","length","push","ChangePage","fetch","then","res","json","result","data","message","map","item","id","text","nextPage","prevPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,WAAD,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMgB,QAAQ,GAAGP,MAAM,GAAGI,WAA1B;AACC,QAAMI,SAAS,GAAGD,QAAQ,GAAGH,WAA7B;AACH,QAAMK,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAX,EAAsBD,QAAtB,CAApB;AACA,QAAMK,UAAU,GAAG,EAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUL,IAAI,CAACM,MAAL,GAAcZ,WAAxB,CAArB,EAA2DS,CAAC,EAA5D,EAAgE;AAC9DD,IAAAA,UAAU,CAACK,IAAX,CAAgBJ,CAAhB;AACD;;AAED,QAAMK,UAAU,GAAIN,UAAD,IAAgB;AACjCX,IAAAA,SAAS,CAACW,UAAD,CAAT;AACD,GAFD;;AAIEtB,EAAAA,SAAS,CAAC,MAAM;AACZ6B,IAAAA,KAAK,CAAE,+CAA8CnB,MAAO,sBAAqBI,WAAY,EAAxF,CAAL,CACCgB,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,MAAD,IAAY;AACRpB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAG,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWkB,MAAM,CAACC,IAAlB,CAAD,CAAR;AACH,KANL,EAOK1B,KAAD,IAAW;AACPK,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAJ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAVL;AAYH,GAbQ,EAaN,EAbM,CAAT;;AAeA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAAC2B,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAGK,IAAI,CAACvB,QAAL,EAAe;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFI,MAGA;AACD,wBAEI,QAAC,QAAD;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKG,KAAK,CAACqB,GAAN,CAAU,CAACC,IAAD,EAAOC,EAAP;AAAA;;AAAA,4BACP,QAAC,QAAD;AAEI,UAAA,IAAI,YAAED,IAAI,CAAC,CAAD,CAAN,2CAAE,OAASE;AAFnB,WACSD,EADT;AAAA;AAAA;AAAA;AAAA,gBADO;AAAA,OAAV,CAFL,eASI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AACG,UAAA,UAAU,EAAE,MAAME,QAAQ,EAD7B;AAEG,UAAA,SAAS,EAAE,MAAMC,QAAQ,EAF5B;AAGG,UAAA,KAAK,EAAE1B;AAHV;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CAqBI;AArBJ;AAuBH;AACJ,CAlED;;GAAMR,I;;KAAAA,I;AAoEN,eAAeA,IAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport Header from '../components/header';\nimport Question from '../components/question';\nimport Description from '../components/description';\nimport LeftSide from '../components/leftside';\nimport Rightside from '../components/rightside';\n\nconst Quiz = () => {\n    const [error, setError] = useState(null);\n    const [number, setNumber] = useState(1);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [postPerPage] = useState(10);\n    const [items, setItems] = useState([]);\n\n    const lastPost = number * postPerPage;\n     const firstPost = lastPost - postPerPage;\n  const currentPost = post.slice(firstPost, lastPost);\n  const pageNumber = [];\n\n  for (let i = 1; i <= Math.ceil(post.length / postPerPage); i++) {\n    pageNumber.push(i);\n  }\n\n  const ChangePage = (pageNumber) => {\n    setNumber(pageNumber);\n  };\n\n    useEffect(() => {\n        fetch(`https://adeo.app/api/questions/get?level_id=${number}&course_id=1&limit=${postPerPage}`)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setIsLoaded(true);\n                setItems([...items, result.data]);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error);\n            }\n        )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n    else if (!isLoaded) {\n        return <div>Loading...</div>;\n    }\n    else {\n        return(\n\n            <Fragment>\n                <Header />\n                {items.map((item, id) => (\n                    <Question\n                        key={id}\n                        item={item[0]?.text}\n                    />\n                )\n                )}\n                <Description />\n                <div className='main-content'>\n                    <LeftSide />\n                    <Rightside \n                       rightClick={() => nextPage()} \n                       leftClick={() => prevPage()} \n                       items={items}\n                    />\n                </div>\n            </Fragment>\n            // console.log(items)\n       )\n    }\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}