{"ast":null,"code":"var _jsxFileName = \"/Users/uchennaibe/Desktop/adeo-app/src/screens/quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/header';\nimport Question from '../components/question';\nimport Description from '../components/description';\nimport LeftSide from '../components/leftside';\nimport Rightside from '../components/rightside';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Quiz = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [post, setPost] = useState([]);\n  const [number, setNumber] = useState(1); // No of pages\n\n  const [postPerPage] = useState(10);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`https://adeo.app/api/questions/get?level_id=${currentPage}&course_id=1&limit=5`).then(response => response.json()).then(json => {\n      setPost(json);\n      setLoading(false);\n    });\n  }, [currentPage]);\n  const lastPost = number * postPerPage;\n  const currentPost = post.slice(firstPost, lastPost);\n  const firstPost = lastPost - postPerPage;\n  console.log(post);\n  const pageNumber = [];\n\n  for (let i = 1; i <= Math.ceil(post.length / postPerPage); i++) {\n    pageNumber.push(i);\n  }\n\n  const ChangePage = pageNumber => {\n    setNumber(pageNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), currentPost.map((Val, id) => {\n      var _Val$;\n\n      return /*#__PURE__*/_jsxDEV(Question, {\n        item: (_Val$ = Val[0]) === null || _Val$ === void 0 ? void 0 : _Val$.text\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(LeftSide, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Rightside //    rightClick={() => nextPage()} \n      //    leftClick={() => prevPage()} \n      //    items={items}\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Quiz, \"92SoN+hWh+occbfquaCZ4bxwURw=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/uchennaibe/Desktop/adeo-app/src/screens/quiz.js"],"names":["React","useEffect","useState","Header","Question","Description","LeftSide","Rightside","Quiz","loading","setLoading","post","setPost","number","setNumber","postPerPage","fetch","currentPage","then","response","json","lastPost","currentPost","slice","firstPost","console","log","pageNumber","i","Math","ceil","length","push","ChangePage","map","Val","id","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC,CAHe,CAG0B;;AACzC,QAAM,CAACa,WAAD,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,IAAAA,KAAK,CAAE,+CAA8CC,WAAY,sBAA5D,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOE,IAAD,IAAU;AAAER,MAAAA,OAAO,CAACQ,IAAD,CAAP;AAAeV,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmB,KAFpD;AAID,GANM,EAML,CAACO,WAAD,CANK,CAAT;AAQA,QAAMI,QAAQ,GAAGR,MAAM,GAAGE,WAA1B;AACA,QAAMO,WAAW,GAAGX,IAAI,CAACY,KAAL,CAAWC,SAAX,EAAsBH,QAAtB,CAApB;AACA,QAAMG,SAAS,GAAGH,QAAQ,GAAGN,WAA7B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACA,QAAMgB,UAAU,GAAG,EAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUnB,IAAI,CAACoB,MAAL,GAAchB,WAAxB,CAArB,EAA2Da,CAAC,EAA5D,EAAgE;AAC5DD,IAAAA,UAAU,CAACK,IAAX,CAAgBJ,CAAhB;AACH;;AAED,QAAMK,UAAU,GAAIN,UAAD,IAAgB;AAC/Bb,IAAAA,SAAS,CAACa,UAAD,CAAT;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAESL,WAAW,CAACY,GAAZ,CAAgB,CAACC,GAAD,EAAMC,EAAN;AAAA;;AAAA,0BACb,QAAC,QAAD;AAEI,QAAA,IAAI,WAAED,GAAG,CAAC,CAAD,CAAL,0CAAE,MAAQE;AAFlB,SACSD,EADT;AAAA;AAAA;AAAA;AAAA,cADa;AAAA,KAAhB,CAFT,eASQ,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YATR,eAUQ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD,CACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVR;AAAA,kBADJ;AAqBH,CAjDD;;GAAM5B,I;;KAAAA,I;AAmDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from '../components/header';\nimport Question from '../components/question';\nimport Description from '../components/description';\nimport LeftSide from '../components/leftside';\nimport Rightside from '../components/rightside';\n\nconst Quiz = () => {\n    const [loading, setLoading] = useState(true);\n    const [post, setPost] = useState([]);\n    const [number, setNumber] = useState(1); // No of pages\n    const [postPerPage] = useState(10);\n\n    useEffect(()=>{\n        setLoading(true);\n        fetch(`https://adeo.app/api/questions/get?level_id=${currentPage}&course_id=1&limit=5`)\n        .then((response) => response.json())\n        .then((json) => { setPost(json); setLoading(false);});\n        \n      },[currentPage]);\n\n    const lastPost = number * postPerPage;\n    const currentPost = post.slice(firstPost, lastPost);\n    const firstPost = lastPost - postPerPage;\n    console.log(post)\n    const pageNumber = [];\n    \n    for (let i = 1; i <= Math.ceil(post.length / postPerPage); i++) {\n        pageNumber.push(i);\n    }\n    \n    const ChangePage = (pageNumber) => {\n        setNumber(pageNumber);\n    };\n\n    return (\n        <>\n            <Header />\n                {currentPost.map((Val, id) => (\n                    <Question\n                        key={id}\n                        item={Val[0]?.text}\n                    />\n                )\n                )}\n                <Description />\n                <div className='main-content'>\n                    <LeftSide />\n                    <Rightside \n                    //    rightClick={() => nextPage()} \n                    //    leftClick={() => prevPage()} \n                    //    items={items}\n                    />\n                </div>\n        </>\n    )\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}